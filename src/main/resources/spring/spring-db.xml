<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <tx:annotation-driven />

    <context:component-scan base-package="com.amz.reviews.**.repository" />
    <jpa:repositories base-package="com.amz.reviews.**.repository.datajpa" />
<!--    <context:property-placeholder location="classpath:/db/heroku.properties" system-properties-mode="OVERRIDE"/>-->

<!--    <bean class="java.net.URI" id="dbUrl">-->
<!--        <constructor-arg value="${DATABASE_URL}"/>-->
<!--    </bean>-->
<!--    <bean id="dataSource"-->
<!--          class="org.apache.tomcat.jdbc.pool.DataSource"-->
<!--          p:url="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + @dbUrl.getPath() }"-->
<!--          p:username="#{ @dbUrl.getUserInfo().split(':')[0] }"-->
<!--          p:password="#{ @dbUrl.getUserInfo().split(':')[1] }"-->
<!--          p:driverClassName="org.postgresql.Driver"-->
<!--          p:validationQuery="SELECT 1"-->
<!--          p:maxActive="10"-->
<!--          p:minIdle="2"-->
<!--          p:maxWait="20000"-->
<!--          p:initialSize="2"-->
<!--          p:maxIdle="5"-->
<!--          p:testOnBorrow="true"-->
<!--          p:removeAbandoned="true"-->
<!--          p:testOnConnect="true"-->
<!--          p:testWhileIdle="true"/>-->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        p:dataSource-ref="dataSource"
        p:packagesToScan="com.amz.reviews.**.model">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.format_sql" value="false" />
                <entry key="hibernate.use_sql_comments" value="false" />
                <entry key="hibernate.show_sql" value="false" />
            </map>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="entityManagerFactory" />

</beans>